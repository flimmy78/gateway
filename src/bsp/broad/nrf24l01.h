/********************************************************************************
**
** 文件名:     nrf24l01p.h
** 版权所有:   
** 文件描述:   实现nrf24l01p驱动
**
*********************************************************************************
**             修改历史记录
**===============================================================================
**| 日期       | 作者   |  修改记录
**===============================================================================
**| 2012/08/14 | 苏友江 |  创建该文件
*********************************************************************************/
#ifndef H_NRF24L01
#define H_NRF24L01		  




/*
********************************************************************************
* 参数定义
********************************************************************************
*/

/*
********************************************************************************
* 工作模式定义
********************************************************************************
*/
typedef enum {
    INVALID  = 0,
    SHUTDOWN = 1,          /* 关断模式 */
    STANDBY,               /* 待机模式 */
    RX,                    /* 接收模式 */
    IDLE_TX,               /* 发送空闲模式 */
    TX                     /* 发送模式 */
} WORK_MODE_E;

/*******************************************************************
** 函数名:      nrf24l01_init
** 函数描述:    nrf24l01模块初始化
** 参数:        [in] rf_ch:  6:0，0000010，设置芯片工作时的信道，分别对应1~125 个道,信道间隔为1MHZ, 默认为02即2402MHz
** 参数:        [in] rf_dr:  数据传输速率，设置射频数据率为250kbps 、1Mbps 或2Mbps
** 参数:        [in] rf_pwr: 设置TX发射功率111: 7dBm,  000:-12dBm
** 返回:        true or false
********************************************************************/
BOOLEAN nrf24l01_init(INT8U rf_ch, INT8U rf_dr, INT8U rf_pwr);

/*******************************************************************
** 函数名:      nrf24l01_check
** 函数描述:    nrf24l01模块检查
** 参数:        无
** 返回:        true or false
********************************************************************/
BOOLEAN nrf24l01_check(void);

/*******************************************************************
** 函数名:      nrf24l01_mode_switch
** 函数描述:    工作模式切换
** 参数:        [in] mode: 工作模式
** 返回:        true or false
********************************************************************/
BOOLEAN nrf24l01_mode_switch(WORK_MODE_E mode);

/*******************************************************************
** 函数名:      nrf24l01_dest_addr_set
** 函数描述:    目的地址设置
** 参数:        [in] addr: 地址指针
**              [in] len : 地址长度
** 返回:        true or false
********************************************************************/
BOOLEAN nrf24l01_dest_addr_set(INT8U* addr, INT8U len);

/*******************************************************************
** 函数名:      nrf24l01_src_addr_set
** 函数描述:    目的地址设置
** 参数:        [in] no  : 接收通道
**              [in] addr: 地址指针
**              [in] len : 地址长度
** 返回:        true or false
********************************************************************/
BOOLEAN nrf24l01_src_addr_set(INT8U no, INT8U* addr, INT8U len);

/*******************************************************************
** 函数名:      nrf24l01_irq
** 函数描述:    发送/接收完成检查
** 参数:        无
** 返回:        true or false
********************************************************************/
BOOLEAN nrf24l01_irq(void);

/*******************************************************************
** 函数名:      nrf24l01_packet_send
** 函数描述:    数据发送接口
** 参数:        [in] packet: 发送数据指针
**              [in] len   : 数据长度
** 返回:        true or false
********************************************************************/
BOOLEAN nrf24l01_packet_send(INT8U* packet, INT8U len);

/*******************************************************************
** 函数名:      nrf24l01_packet_send
** 函数描述:    数据发送接口
** 参数:        [in] packet: 接收数据指针
**              [in] len   : 数据长度
** 返回:        接收数据长度，0为无接收到数据
********************************************************************/
INT8U nrf24l01_packet_recv(INT8U* packet, INT8U len);

/*******************************************************************
** 函数名:      nrf24l01_get_signal
** 函数描述:    获取信号强度，1表示信号强度大约-60dBm
** 参数:        无
** 返回:        true or false
********************************************************************/
BOOLEAN nrf24l01_get_signal(void);

#endif /* end of H_NRF24L01 */

